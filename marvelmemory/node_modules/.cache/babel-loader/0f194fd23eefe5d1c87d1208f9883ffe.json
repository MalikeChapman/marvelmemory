{"ast":null,"code":"var _jsxFileName = \"/home/asher/the_odin_project/marvelmemory/marvelmemory/src/components/MarvelCharacters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MarvelCharacters(props) {\n  _s();\n\n  const {\n    level,\n    score,\n    highscore,\n    handleClick\n  } = props;\n  const {\n    list,\n    setList\n  } = useState([]);\n  const params = new URLSearchParams({\n    ts: 1,\n    apikey: \"9a5cc156918beff79aa02e30c39145f8\",\n    hash: \"bc62daa140fd5f5c7476880509688a20\",\n    limit: 100\n  });\n\n  let marvelList = async () => await fetch(`https://gateway.marvel.com/v1/public/characters?${params}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).then(data => {\n    return data.data.results;\n  });\n\n  marvelList().then(() => {\n    const {\n      name,\n      thumbnail\n    } = marvelList[0];\n    console.log(name, thumbnail, marvelList);\n  });\n  const style = {\n    display: \"grid\",\n    width: \"100%\",\n    height: \"70vh\",\n    gridTemplateColumns: `repeat(5, 1fr)`,\n    gridTemplateRows: `auto`\n  };\n  useEffect(() => {\n    for (let i = 0; i < level * 5; i++) {\n      const {\n        name,\n        thumbnail\n      } = marvelList[i];\n      console.log(name, thumbnail);\n    }\n  }, [level]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card-Grid\",\n    style: style,\n    children: list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MarvelCharacters, \"4Cdg22fIk2ErOiNKKTYnK1rjdBM=\");\n\n_c = MarvelCharacters;\nexport default MarvelCharacters;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarvelCharacters\");","map":{"version":3,"sources":["/home/asher/the_odin_project/marvelmemory/marvelmemory/src/components/MarvelCharacters.js"],"names":["React","useState","useEffect","MarvelCharacters","props","level","score","highscore","handleClick","list","setList","params","URLSearchParams","ts","apikey","hash","limit","marvelList","fetch","method","then","response","json","data","results","name","thumbnail","console","log","style","display","width","height","gridTemplateColumns","gridTemplateRows","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EACA;AAAA;;AACG,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAyCJ,KAA/C;AACA,QAAM;AAACK,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACC,QAAMU,MAAM,GAAG,IAAIC,eAAJ,CAAoB;AAC/BC,IAAAA,EAAE,EAAE,CAD2B;AAE/BC,IAAAA,MAAM,EAAE,kCAFuB;AAG/BC,IAAAA,IAAI,EAAE,kCAHyB;AAI/BC,IAAAA,KAAK,EAAE;AAJwB,GAApB,CAAf;;AAOA,MAAIC,UAAU,GAAG,YAAY,MAC7BC,KAAK,CAAE,mDAAkDP,MAAO,EAA3D,EAA8D;AAC/DQ,IAAAA,MAAM,EAAE;AADuD,GAA9D,CAAL,CAGGC,IAHH,CAGSC,QAAQ,IAAI;AACjB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALD,EAKGF,IALH,CAKQG,IAAI,IAAI;AACZ,WAAOA,IAAI,CAACA,IAAL,CAAUC,OAAjB;AACH,GAPD,CADA;;AASAP,EAAAA,UAAU,GAAGG,IAAb,CAAkB,MAAK;AACnB,UAAM;AAACK,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAoBT,UAAU,CAAC,CAAD,CAApC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,SAAlB,EAA6BT,UAA7B;AAEH,GAJD;AAMA,QAAMY,KAAK,GAAG;AACVC,IAAAA,OAAO,EAAE,MADC;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,MAAM,EAAE,MAHE;AAIVC,IAAAA,mBAAmB,EAAG,gBAJZ;AAKVC,IAAAA,gBAAgB,EAAG;AALT,GAAd;AASAhC,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAI,IAAIiC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAI9B,KAAK,GAAG,CAA5B,EAAgC8B,CAAC,EAAjC,EACA;AACI,YAAM;AAACV,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAoBT,UAAU,CAACkB,CAAD,CAApC;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,SAAlB;AACH;AACJ,GANQ,EAMN,CAACrB,KAAD,CANM,CAAT;AASA,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAEwB,KAAlC;AAAA,cACKpB;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAIH;;GAhDQN,gB;;KAAAA,gB;AAkDT,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\nfunction MarvelCharacters(props)\n{\n   const {level, score, highscore, handleClick} = props;\n   const {list, setList} = useState([]);\n    const params = new URLSearchParams({\n        ts: 1,\n        apikey: \"9a5cc156918beff79aa02e30c39145f8\",\n        hash: \"bc62daa140fd5f5c7476880509688a20\",\n        limit: 100, \n        \n    });\n    let marvelList = async () => await\n    fetch(`https://gateway.marvel.com/v1/public/characters?${params}`, {\n        method: \"GET\",\n        \n    }).then( response => {\n        return response.json();\n    }).then(data => {\n        return data.data.results;\n    });\n    marvelList().then(()=> {\n        const {name, thumbnail} = marvelList[0];\n        console.log(name, thumbnail, marvelList);\n\n    });\n\n    const style = {\n        display: \"grid\",\n        width: \"100%\",\n        height: \"70vh\",\n        gridTemplateColumns: `repeat(5, 1fr)`,\n        gridTemplateRows: `auto`\n        \n    };\n\n    useEffect(() => {\n        for(let i = 0; i < (level * 5); i++)\n        {\n            const {name, thumbnail} = marvelList[i];\n            console.log(name, thumbnail);\n        }\n    }, [level])\n  \n\n    return(\n    <div className=\"Card-Grid\" style={style}>\n        {list}\n    </div>)\n}\n\nexport default MarvelCharacters;"]},"metadata":{},"sourceType":"module"}