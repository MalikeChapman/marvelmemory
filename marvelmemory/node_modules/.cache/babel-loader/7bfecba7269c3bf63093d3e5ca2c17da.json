{"ast":null,"code":"var _jsxFileName = \"/home/asher/the_odin_project/marvelmemory/marvelmemory/src/components/MarvelCharacters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport { key } from \"../key\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MarvelCharacters(props) {\n  _s();\n\n  const {\n    level,\n    score,\n    highscore,\n    handleClick\n  } = props;\n  const [list, setList] = useState([]);\n  const [showcase, setshowcase] = useState([]);\n  const params = new URLSearchParams({\n    ts: key.ts,\n    apikey: key.apikey,\n    hash: key.hash,\n    limit: key.limit\n  });\n  let characters = [];\n\n  const listFunc = async data => await setList(data);\n\n  let marvelList = async () => await fetch(`https://gateway.marvel.com/v1/public/characters?${params}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).then(data => {\n    listFunc(data.data.results);\n    let holder = data.data.results;\n\n    for (let i = 0; i < 5; i++) {\n      let random = Math.floor(Math.random() * (holder.length + 1));\n      const data = holder[random];\n      characters = [...characters, /*#__PURE__*/_jsxDEV(Card, {\n        level: level,\n        score: score,\n        handleClick: handleClick,\n        data: data\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)];\n    }\n\n    setshowcase(characters);\n  });\n\n  const shuffleArray = array => {\n    array.sort((a, b) => 0.5 - Math.random());\n  };\n\n  useEffect(() => {\n    marvelList();\n  }, []);\n  useEffect(() => {\n    let shuffle = [...showcase];\n    shuffleArray(shuffle);\n    setshowcase(shuffle);\n    console.log(highscore);\n  }, [score, highscore]);\n  const style = {\n    display: \"grid\",\n    width: \"100%\",\n    height: \"70vh\",\n    gridTemplateColumns: `repeat(5, 1fr)`,\n    gridTemplateRows: `auto`,\n    justifyContent: \"center\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card-Grid\",\n    style: style,\n    children: showcase\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MarvelCharacters, \"vCQjYDada1B4kZYRjVDQHOWNXrs=\");\n\n_c = MarvelCharacters;\nexport default MarvelCharacters;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarvelCharacters\");","map":{"version":3,"sources":["/home/asher/the_odin_project/marvelmemory/marvelmemory/src/components/MarvelCharacters.js"],"names":["React","useState","useEffect","Card","key","MarvelCharacters","props","level","score","highscore","handleClick","list","setList","showcase","setshowcase","params","URLSearchParams","ts","apikey","hash","limit","characters","listFunc","data","marvelList","fetch","method","then","response","json","results","holder","i","random","Math","floor","length","shuffleArray","array","sort","a","b","shuffle","console","log","style","display","width","height","gridTemplateColumns","gridTemplateRows","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Card from \"./Card\";\nimport { key } from \"../key\";\n\nfunction MarvelCharacters(props)\n{\n   const {level, score, highscore, handleClick} = props;\n   const [list, setList] = useState([]);\n   const [showcase, setshowcase] = useState([]);\n    const params = new URLSearchParams({\n        ts: key.ts,\n        apikey: key.apikey,\n        hash: key.hash,\n        limit: key.limit, \n        \n    });\n    let characters = [];\n    const listFunc = async (data) => await \n        setList(data);\n    \n    let marvelList = async () => await\n    fetch(`https://gateway.marvel.com/v1/public/characters?${params}`, {\n        method: \"GET\",\n        \n    }).then( response => {\n        return response.json();\n    }).then(data => {\n        listFunc(data.data.results);\n        let holder = data.data.results;\n        for(let i = 0; i < 5; i++)\n        {\n            let random = Math.floor(Math.random() * (holder.length + 1));\n            const data = holder[random];\n            characters = [...characters, \n            <Card key={i} level={level} score={score} handleClick={handleClick} data={data}/>]\n        }\n        setshowcase(characters);\n            \n    });\n    const shuffleArray = (array) => {\n        array.sort((a, b) => 0.5 - Math.random());\n    }\n\n    useEffect(() =>\n    {\n        marvelList();\n    }, []);\n    useEffect(() =>{\n        let shuffle = [...showcase];\n        shuffleArray(shuffle);\n        setshowcase(shuffle);\n        console.log(highscore);\n    }, [score, highscore])\n\n\n    const style = {\n        display: \"grid\",\n        width: \"100%\",\n        height: \"70vh\",\n        gridTemplateColumns: `repeat(5, 1fr)`,\n        gridTemplateRows: `auto`,\n        justifyContent: \"center\"\n    };\n  \n\n    return(\n    <div className=\"Card-Grid\" style={style}>\n        {showcase}\n    </div>)\n}\n\nexport default MarvelCharacters;"]},"metadata":{},"sourceType":"module"}