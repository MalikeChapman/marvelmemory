{"ast":null,"code":"var _jsxFileName = \"/home/asher/the_odin_project/marvelmemory/marvelmemory/src/components/MarvelCharacters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MarvelCharacters(props) {\n  _s();\n\n  const {\n    level,\n    score,\n    highscore,\n    handleClick\n  } = props;\n  const {\n    list,\n    setList\n  } = useState([]);\n  const {\n    showcase,\n    setshowcase\n  } = useState([]);\n  const params = new URLSearchParams({\n    ts: 1,\n    apikey: \"9a5cc156918beff79aa02e30c39145f8\",\n    hash: \"bc62daa140fd5f5c7476880509688a20\",\n    limit: 100\n  });\n  let characters = [];\n\n  let marvelList = async () => await fetch(`https://gateway.marvel.com/v1/public/characters?${params}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).then(data => {\n    setList(data.data.results);\n  });\n\n  const style = {\n    display: \"grid\",\n    width: \"100%\",\n    height: \"70vh\",\n    gridTemplateColumns: `repeat(5, 1fr)`,\n    gridTemplateRows: `auto`\n  };\n\n  for (let i = 0; i < 5; i++) {\n    let random = Math.floor(Math.random() * (marvelList.length + 1));\n    const data = marvelList[random];\n    characters = [...characters, /*#__PURE__*/_jsxDEV(Card, {\n      level: level,\n      score: score,\n      handleClick: handleClick,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)];\n  }\n\n  useEffect(() => {\n    setshowcase([...showcase, characters]);\n  });\n  useEffect(() => {\n    for (let i = 0; i < level * 5; i++) {}\n  }, [level]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card-Grid\",\n    style: style,\n    children: showcase\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MarvelCharacters, \"A+NAYtUafcEtUUbbetDhBWBmrpc=\");\n\n_c = MarvelCharacters;\nexport default MarvelCharacters;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarvelCharacters\");","map":{"version":3,"sources":["/home/asher/the_odin_project/marvelmemory/marvelmemory/src/components/MarvelCharacters.js"],"names":["React","useState","useEffect","Card","MarvelCharacters","props","level","score","highscore","handleClick","list","setList","showcase","setshowcase","params","URLSearchParams","ts","apikey","hash","limit","characters","marvelList","fetch","method","then","response","json","data","results","style","display","width","height","gridTemplateColumns","gridTemplateRows","i","random","Math","floor","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EACA;AAAA;;AACG,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAyCJ,KAA/C;AACA,QAAM;AAACK,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAACW,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACC,QAAMa,MAAM,GAAG,IAAIC,eAAJ,CAAoB;AAC/BC,IAAAA,EAAE,EAAE,CAD2B;AAE/BC,IAAAA,MAAM,EAAE,kCAFuB;AAG/BC,IAAAA,IAAI,EAAE,kCAHyB;AAI/BC,IAAAA,KAAK,EAAE;AAJwB,GAApB,CAAf;AAOA,MAAIC,UAAU,GAAG,EAAjB;;AACA,MAAIC,UAAU,GAAG,YAAY,MAC7BC,KAAK,CAAE,mDAAkDR,MAAO,EAA3D,EAA8D;AAC/DS,IAAAA,MAAM,EAAE;AADuD,GAA9D,CAAL,CAGGC,IAHH,CAGSC,QAAQ,IAAI;AACjB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALD,EAKGF,IALH,CAKQG,IAAI,IAAI;AACZhB,IAAAA,OAAO,CAACgB,IAAI,CAACA,IAAL,CAAUC,OAAX,CAAP;AACH,GAPD,CADA;;AAWA,QAAMC,KAAK,GAAG;AACVC,IAAAA,OAAO,EAAE,MADC;AAEVC,IAAAA,KAAK,EAAE,MAFG;AAGVC,IAAAA,MAAM,EAAE,MAHE;AAIVC,IAAAA,mBAAmB,EAAG,gBAJZ;AAKVC,IAAAA,gBAAgB,EAAG;AALT,GAAd;;AAQA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EACA;AACI,QAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,MAAiBf,UAAU,CAACkB,MAAX,GAAoB,CAArC,CAAX,CAAb;AACA,UAAMZ,IAAI,GAAGN,UAAU,CAACe,MAAD,CAAvB;AACAhB,IAAAA,UAAU,GAAG,CAAC,GAAGA,UAAJ,eACb,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEd,KAAb;AAAoB,MAAA,KAAK,EAAEC,KAA3B;AAAkC,MAAA,WAAW,EAAEE,WAA/C;AAA4D,MAAA,IAAI,EAAEkB;AAAlE;AAAA;AAAA;AAAA;AAAA,YADa,CAAb;AAEH;;AACDzB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcQ,UAAd,CAAD,CAAX;AACH,GAFQ,CAAT;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAI,IAAIiC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAI7B,KAAK,GAAG,CAA5B,EAAgC6B,CAAC,EAAjC,EACA,CACC;AACJ,GAJQ,EAIN,CAAC7B,KAAD,CAJM,CAAT;AAOA,sBACA;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAEuB,KAAlC;AAAA,cACKjB;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAIH;;GAtDQR,gB;;KAAAA,gB;AAwDT,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Card from \"./Card\";\n\nfunction MarvelCharacters(props)\n{\n   const {level, score, highscore, handleClick} = props;\n   const {list, setList} = useState([]);\n   const {showcase, setshowcase} = useState([]);\n    const params = new URLSearchParams({\n        ts: 1,\n        apikey: \"9a5cc156918beff79aa02e30c39145f8\",\n        hash: \"bc62daa140fd5f5c7476880509688a20\",\n        limit: 100, \n        \n    });\n    let characters = [];\n    let marvelList = async () => await\n    fetch(`https://gateway.marvel.com/v1/public/characters?${params}`, {\n        method: \"GET\",\n        \n    }).then( response => {\n        return response.json();\n    }).then(data => {\n        setList(data.data.results);\n    });\n\n\n    const style = {\n        display: \"grid\",\n        width: \"100%\",\n        height: \"70vh\",\n        gridTemplateColumns: `repeat(5, 1fr)`,\n        gridTemplateRows: `auto`\n        \n    };\n    for(let i = 0; i < 5; i++)\n    {\n        let random = Math.floor(Math.random() * (marvelList.length + 1));\n        const data = marvelList[random];\n        characters = [...characters, \n        <Card level={level} score={score} handleClick={handleClick} data={data}/>]\n    }\n    useEffect(() => {\n        setshowcase([...showcase, characters]);\n    })\n\n    useEffect(() => {\n        for(let i = 0; i < (level * 5); i++)\n        {\n        }\n    }, [level])\n  \n\n    return(\n    <div className=\"Card-Grid\" style={style}>\n        {showcase}\n    </div>)\n}\n\nexport default MarvelCharacters;"]},"metadata":{},"sourceType":"module"}